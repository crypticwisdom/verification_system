# Generated by Django 4.1.6 on 2023-03-05 13:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0032_alter_userdetail_created_by_alter_userdetail_state'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='service',
            name='discount',
        ),
        migrations.RemoveField(
            model_name='service',
            name='platform_percent',
        ),
        migrations.RemoveField(
            model_name='service',
            name='price',
        ),
        migrations.RemoveField(
            model_name='service',
            name='service_type',
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(blank=True, choices=[('paid', 'Paid'), ('free', 'Free')], default='paid', max_length=50, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=10, default=0.0, max_digits=20, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('platform_percent', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='TM30 percentage for the service', max_digits=20, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Tells if this service is available for use. i.e Services can be deactivated.')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('agency', models.ForeignKey(help_text='If agencies can have more than 1 service.', on_delete=django.db.models.deletion.CASCADE, to='account.userdetail')),
                ('channel_available', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.channel')),
                ('service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.service')),
            ],
        ),
    ]
